function Ball.new 0
push constant 11
call Memory.alloc 1
pop pointer 0
push constant 10
pop this 5
push constant 10
pop this 6
push constant 10
pop this 7
push constant 10
pop this 8
push constant 40
pop this 0
push constant 40
pop this 1
push constant 15
pop this 2
push constant 0
pop this 3
push constant 5
pop this 4
push constant 9
pop this 9
push constant 90
pop this 10
push pointer 0
return
function Ball.checkCollision 0
push argument 0
pop pointer 0
push this 0
push this 2
add
push constant 4
call Math.divide 2
push this 9
sub
push constant 0
lt
push this 0
push this 2
add
push constant 4
call Math.divide 2
push this 9
add
push constant 511
gt
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 2
push constant 200
gt
push this 2
push constant 200
neg
lt
or
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 2
push constant 100
call Math.divide 2
push this 10
call Math.multiply 2
neg
pop this 2
goto IF_END1
label IF_FALSE1
push this 2
push this 10
call Math.multiply 2
push constant 100
call Math.divide 2
neg
pop this 2
label IF_END1
label IF_FALSE0
push this 1
push this 3
add
push constant 4
call Math.divide 2
push this 9
sub
push constant 0
lt
push this 1
push this 3
add
push constant 4
call Math.divide 2
push this 9
add
push constant 255
gt
or
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 3
push constant 200
gt
push this 3
push constant 200
neg
lt
or
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 3
push constant 100
call Math.divide 2
push this 10
call Math.multiply 2
neg
pop this 3
goto IF_END3
label IF_FALSE3
push this 3
push this 10
call Math.multiply 2
push constant 100
call Math.divide 2
neg
pop this 3
label IF_END3
label IF_FALSE2
push constant 0
return
function Ball.updateScreenCoord 0
push argument 0
pop pointer 0
push this 5
pop this 7
push this 6
pop this 8
push this 0
push constant 4
call Math.divide 2
pop this 5
push this 1
push constant 4
call Math.divide 2
pop this 6
push constant 0
return
function Ball.drawBall 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 7
push this 8
push this 9
call Screen.drawCircle 3
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 5
push this 6
push this 9
call Screen.drawCircle 3
pop temp 0
push constant 0
return
function Ball.move 0
push argument 0
pop pointer 0
push pointer 0
call Ball.checkCollision 1
pop temp 0
push this 0
push this 2
add
pop this 0
push this 1
push this 3
add
pop this 1
push this 3
push this 4
add
pop this 3
push pointer 0
call Ball.updateScreenCoord 1
pop temp 0
push constant 50
call Sys.wait 1
pop temp 0
push pointer 0
call Ball.drawBall 1
pop temp 0
push constant 0
return
function Ball.increaseXVelocity 0
push argument 0
pop pointer 0
push this 2
push constant 3
add
pop this 2
push constant 0
return
function Ball.decreaseXVelocity 0
push argument 0
pop pointer 0
push this 2
push constant 3
sub
pop this 2
push constant 0
return
function Ball.increaseYVelocity 0
push argument 0
pop pointer 0
push this 3
push constant 5
add
pop this 3
push constant 0
return
function Ball.decreaseYVelocity 0
push argument 0
pop pointer 0
push this 3
push constant 5
sub
pop this 3
push constant 0
return
function Ball.increaseBounciness 0
push argument 0
pop pointer 0
push this 10
push constant 3
add
pop this 10
push constant 0
return
function Ball.decreaseBounciness 0
push argument 0
pop pointer 0
push this 10
push constant 3
sub
pop this 10
push constant 0
return
function Ball.increaseGravity 0
push argument 0
pop pointer 0
push this 4
push constant 2
add
pop this 4
push constant 0
return
function Ball.decreaseGravity 0
push argument 0
pop pointer 0
push this 4
push constant 2
sub
pop this 4
push constant 0
return
function Ball.increaseBallRadius 0
push argument 0
pop pointer 0
push this 9
push constant 1
add
pop this 9
push constant 0
return
function Ball.decreaseBallRadius 0
push argument 0
pop pointer 0
push this 9
push constant 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 9
push constant 1
sub
pop this 9
label IF_FALSE0
push constant 0
return
function Ball.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
